h2 kmom03

h5 Berätta vilka tekniker/verktyg du valde för enhetstester och kodtäckning och varför?

p Jag valde att köra Travis och scrutinizer, då jag har använt verktygen tidigare i PHPMVC kursen och för att jag gillar hur de fungerar. Sen så la jag till codeclimate för att jag gillade hur deras hemsida såg ut jämfört med den andra som fanns i övningen. Till sist så använder jag codecov som jag också fick ett bra intryck då jag först besökte deras hemsida och den funkade väldigt smidigt.

h5 Berätta om cin CI-kedja och reflektera över de valen du gjorde?

p Jag valde de verktygen som jag kände var enkla att använda. Samt så ville jag att det ska vara enkelt att navigera runt på deras hemsidor för att ta reda på vad som gör att koden är kass eller varför den inte går igenom testen. Så därför blev de dem valen ovan. 
 
h5 Hur väl lyckades du utvärdera TDD-konceptet och vilka är dina reflektioner?

p Har använt TDD förut och är inte ett stort fan av det. Att använda det när man arbetar med front-end känns rätt onödigt. Men sitter man med back-end kod så tycker jag att det är helt ok. Jag byggde inte alls mycket på min front-end i detta kursmomentet, utan testade bara olika grejer utanför repot för att förstå hur visa saker fungerar så jag använde inte TDD-konceptet. Men kanske använder det senare i kursen.

h5 Berätta om tankarna kring din klient/server applikation och nämn de tekniker du använder.

p Jag tänker bygga en applikation som använder sig utav Angular (5) till front-end. Front-enden pratar sedan med back-end som består utav Express som sedan har en koppling till Firebase som fixar databasen och inloggningen. Realtids delen kommer finnas i back-enden också, så att Angular bara är för att göra front-end grejer och bara gör request till API:et för att hämta information. 

p Har använt Angular innan och vill blir mycket bättre på det. Samt så har jag under veckan satt mig in i hur testningen fungerar i Angular, vilket jag inte har gjort innan. Det viktigaste från det var att läsa dokumentationen från Angular-cli bättre så slipper man googla onödiga svar som redan finns i dokumentationen :)